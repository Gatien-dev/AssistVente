@model AssistVente.Models.Forfait

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>Enregistrez un nouveau Forfait</h4>
    <div class="form-horizontal">
        <div class="row">

            <hr class="col-md-11" />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group col-md-11">
                @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-11">
                @Html.LabelFor(model => model.GroupeForfaitId, "Groupe", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.DropDownList("GroupeForfaitId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GroupeForfaitId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-11">
                @Html.LabelFor(model => model.Montant, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Montant, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "1", @placeholder="0.00" } })
                    @Html.ValidationMessageFor(model => model.Montant, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-11">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-11">
                @Html.LabelFor(model => model.Duree, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Duree, new { htmlAttributes = new { @class = "form-control", Value = 1 } })
                    @Html.ValidationMessageFor(model => model.Duree, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
            @Html.LabelFor(model => model.CreatorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatorId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatorId, "", new { @class = "text-danger" })
            </div>
        </div>*@


        </div>


    </div>
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 text-center">
            <input type="submit" class="btn btn-primary" value="Enregistrer" onclick="submitMainForm()" />
            <a href="@Url.Action("Index")" style="margin-right:5px;" class="btn btn-default"><i class="fas fa-arrow-left"></i> Retour à la liste</a>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
