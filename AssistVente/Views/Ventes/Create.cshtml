@model AssistVente.Models.ViewModels.VenteVM

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Nouvelle vente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">Client</label>
            <div class="col-md-10">
                @Html.DropDownList("ClientId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-full-width">
                <thead>
                <th class="col-md-3">Produit</th>
                <th class="col-md-3">Quantite</th>
                <th class="col-md-3">Prix</th>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Details.Count; i++)
                    {
                        <tr>
                            <td class="col-md-3">@Model.Details[i].NomProduit</td>
                            @Html.HiddenFor(model=>Model.Details[i].ProduitId)
                            <td class="col-md-3">@Html.TextBoxFor(model => Model.Details[i].Quantite, htmlAttributes: new { @class = "form-control", @type = "number" })</td>
                            <td class="col-md-3">@Html.TextBoxFor(model => Model.Details[i].PU, htmlAttributes: new { @class = "form-control", @type = "number" })</td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
