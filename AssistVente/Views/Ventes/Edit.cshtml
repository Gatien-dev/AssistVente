@model AssistVente.Models.ViewModels.VenteVM
@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="form-horizontal">
        <h4>Modification de vente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Client</label>
            <div class="col-md-6">
                @Html.DropDownList("ClientId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                <label class="control-label col-md-2">Montant payé</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => Model.MontantPaye, htmlAttributes: new { @class = "form-control", @type = "number", @step = "0.1", @placeholder = "0",@onkeyup="updateMonnaie()" })
                    @Html.ValidationMessageFor(model => model.MontantPaye, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
                <label class="control-label col-md-2">Date</label>
                <div class="col-md-6">
                    @Html.DisplayFor(model => Model.DateOperation)
                    @Html.ValidationMessageFor(model => model.DateOperation, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="form-group col-md-6">
            <label for="sel1">Mode de reglement</label>
            <select class="form-control" id="sel1" name="reglement">
                <option>Espèce</option>
                <option>Chèque</option>
                <option>Carte banquaire</option>
            </select>
        </div>
        <div class="form-group col-md-12">
            <div class="row">
                <div class="col-md-6 row">
                    <div class="col-md-3">
                        <label id="total_label">Total: </label>
                    </div>
                    <div class="col-md-8">
                        <input type="number" id="total_input" class="form-control text-align-right" value="0" disabled />
                    </div>
                </div>
                <hr class="col-md-12" />
                <div class="col-md-12 row">
                    <div class="col-md-3">
                        <label>Montant Paye: </label>
                    </div>
                    <div class="col-md-2">
                        @*<input type="number" id="reglement_input" class="form-control text-align-right" value="0"  />*@
                        @Html.TextBoxFor(model => Model.MontantPaye, htmlAttributes: new
                   {
                       @class = "form-control",
                       @type = "number",
                       @step = "0.1",
                       @placeholder = "0",
                       @onkeyup = "updateMonnaie()"
                   })
                    </div>
                    <div class="col-md-2">
                        <label>Monnaie: </label>
                    </div>
                    <div class="col-md-3">
                        <input type="number" id="monnaie_input" class="form-control text-align-right" value="0" disabled />
                    </div>
                    <div class="col-md-2">
                        <input type="search" id="searchBox" class="form-control text-align-right" placeholder="Recherche" onkeyup='myFunction()' />
                    </div>

                </div>
            </div>
        </div>
        <hr />
        <div class="table-responsive">
            <table id="myTable" class="table table-condensed table-bordered table-hover">
                <thead>
                    <tr>
                        <th class="col-md-3">Produit</th>
                        <th class="col-md-3">Prix</th>
                        <th class="col-md-3">Quantite</th>
                        <th class="col-md-3">Total</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Details.Count; i++)
                    {
                        <tr>
                            <td class="col-md-3">@Model.Details[i].NomProduit</td>
                            @Html.HiddenFor(model => Model.Details[i].ProduitId)
                            <td class="col-md-3">
                                <span class="prix_unitaire">@Html.DisplayFor(model => Model.Details[i].PU)</span>
                            </td>
                            <td class="col-md-3">
                                @Html.TextBoxFor(model => Model.Details[i].Quantite,
                                                htmlAttributes: new
                                                {
                                                    @class = "form-control text-align-right qtefield",
                                                    @type = "number",
                                                    @step = "0.1",
                                                    @placeholder = "0",
                                                    @onblur = "updatetotal"
                                                })
                            </td>
                            <td class="col-md-3">
                                <span class="sous_total">0</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div style="margin-bottom:30px;">
            <div class="col-md-5 pull-right">
                <input type="submit" class="btn btn-primary" value="Enregistrer" />
                <a href="@Url.Action("Index")" style="margin-right:5px;" class="btn btn-default"><i class="fas fa-arrow-left"></i> Retour à la liste</a>
            </div>
        </div>
    </div>
}
@section Scripts {
    @* @Scripts.Render("~/bundles/jqueryval")*@
    <script type="text/javascript">
        const fields = document.getElementsByClassName('qtefield');
        const prix = document.getElementsByClassName('prix_unitaire');
        const totaux = document.getElementsByClassName('sous_total');
        for (let i = 0; i < fields.length; i++) {
            fields[i].addEventListener('input', function () {
                //alert(fields[i].value);
                totaux[i].innerHTML = fields[i].value * prix[i].innerHTML;
                updateTotal();
            })
            totaux[i].innerHTML = fields[i].value * prix[i].innerHTML;
            updateTotal();
        }
        function subTotal() {
            //alert(fields[i].value);
            totaux[i].innerHTML = fields[i].value * prix[i].innerHTML;
            updateTotal();
        }
        function updateTotal() {

            let total = 0;
            const totaux = document.getElementsByClassName('sous_total');
            for (let i = 0; i < totaux.length; i++) {
                total = total + parseFloat(totaux[i].innerHTML);
            }

            document.getElementById('total_input').value = total;
        }
        function updateMonnaie() {
            document.getElementById('monnaie_input').value = parseFloat(document.getElementById('MontantPaye').value) - parseFloat(document.getElementById('total_input').value);
        }
    </script>
    <script>
        function myFunction() {
            // Declare variables
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchBox");
            filter = input.value.toUpperCase();
            table = document.getElementById("myTable");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    </script>
}
