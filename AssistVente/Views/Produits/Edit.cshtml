@model AssistVente.Models.Produit

@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Modification du Produit @Model.Nom</h4>
        <h4 class="small">@Html.LabelFor(model => model.Description) : @Model.Description</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrixAchat, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PrixAchat, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrixAchat, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrixVente, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PrixVente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrixVente, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">

                @*<div class="form-group">
                    @Html.LabelFor(model => model.StockDisponible, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StockDisponible, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StockDisponible, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                <div class="form-group">
                    @*@Html.LabelFor(model => model.ALouer, htmlAttributes: new { @class = "control-label col-md-5" })*@
                    <div class="col-md-10">
                        <div class="checkbox">
                            @**@
                            @Html.CheckBoxFor(model => model.ALouer, new { @class = "" })
                            @*<input class="styled-checkbox" id="ALouer" type="checkbox" name="ALouer">*@
                            <label for="ALouer">Disponible en location</label>
                            @Html.ValidationMessageFor(model => model.ALouer, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @*<div class="form-group">
            @Html.LabelFor(model => model.DureeDeLocationParDefaut, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DureeDeLocationParDefaut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DureeDeLocationParDefaut, "", new { @class = "text-danger" })
            </div>
        </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.DateCreation, new { htmlAttributes = new { @class = "form-control" } })
                @*<div class="form-group">
            @Html.LabelFor(model => model.DateCreation, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">

                @Html.ValidationMessageFor(model => model.DateCreation, "", new { @class = "text-danger" })
            </div>
        </div>*@

                @*<div class="form-group">
            @Html.LabelFor(model => model.CreatorId, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatorId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatorId, "", new { @class = "text-danger" })
            </div>
        </div>*@
            </div>
        </div>




        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 text-center">
                <a href="#"><input type="submit" class="btn btn-primary" value="Enregistrer" onclick="submitMainForm()" /></a>
                
                <a href="@Url.Action("Index")" style="margin-right:5px;" class="btn btn-default"><i class="fas fa-arrow-left"></i> Retour à la liste</a>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
